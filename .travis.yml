language: cpp
dist: xenial # используем Ubuntu Xenial 16.04
sudo: required # используем Virtual Machine (а не Docker container)
compiler:
    # ... и с помощью g++, и Clang
    - g++
    - clang

addons:
  apt:
     packages:
        - libglew-dev
        - freeglut3-dev
        - libxi-dev
        - libxmu-dev
        - xserver-xorg-video-dummy
        - xpra
        - xorg-dev
        - opencl-headers
        - libgl1-mesa-dev
        - libxcursor-dev
        - libpulse-dev
        - libxinerama-dev
        - libxrandr-dev
        - libxv-dev
        - libasound2-dev
        - libudev-dev
        - mesa-utils
        - libgl1-mesa-glx
        - libqt5opengl5
        
# установка необходимых зависимостей
# версию qt выбирается исходя https://launchpad.net/~beineri 
before_install:
    - sudo add-apt-repository ppa:beineri/opt-qt-5.11.0-xenial -y
    - sudo add-apt-repository -y ppa:oibaf/graphics-drivers
    - sudo apt-get update -qq -y
    - sudo apt-get install libusb-1.0-0-dev
    - export DEBIAN_FRONTEND=noninteractive
    - sudo apt-get -yq --force-yes install libgl1-mesa-dev libgl1-mesa-glx mesa-common-dev libglapi-mesa libgbm1 libgl1-mesa-dri libxatracker-dev xvfb
install:
    - sudo apt-get install qt511base qt511charts-no-lgpl qt511xmlpatterns
    - source /opt/qt511/bin/qt511-env.sh

before_script:
  - export DISPLAY=:99
  - export LIBGL_ALWAYS_SOFTWARE=1
  - xpra --xvfb="Xorg +extension GLX +extension RANDR +extension RENDER -config `pwd`/test/dummy.xorg.conf -logfile ${HOME}/.xpra/xorg.log"  start :99
  - sleep 3 
  - LIBGL_ALWAYS_SOFTWARE=1 glxinfo
  - glxinfo
  - cat ${HOME}/.xpra/xorg.log
#  - dmesg | grep vmw

script:
    - /opt/qt511/bin/qmake PREFIX=/usr
    - make